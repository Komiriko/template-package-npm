# Name of the workflow
name: Pull Request Checker
run-name: Pull Request Checker

# Global environment variables for secrets and git email
env:
  KEY_SSH: ${{ secrets.KEY_SSH }}
  KEY_GPG: ${{ secrets.KEY_GPG }}
  GIT_EMAIL: necrelox@proton.me

# This workflow will be triggered on pull request to any branch
on:
  pull_request:
    branches:
      - '*'  # Trigger on pull requests to any branch

jobs:
  # Lint job checks if the code passes the linter
  # It will also try to auto-fix the code if possible
  lint:
    name: Check Lint (try to auto-fix if possible)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }} # head_ref is the branch name of the pull request
          fetch-depth: 0 # Fetch all history for all branches and tags
          ssh-key: ${{ env.KEY_SSH }} # SSH key to access the repository (used with deploy keys)

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install

      - name: Run Lint and try to auto-fix if possible
        id: lint_step
        run: |
          echo "## 🔍 Code Analysis (Lint)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
      
          if bun run lint; then
            echo "- ✅ No lint errors detected." >> $GITHUB_STEP_SUMMARY
            echo "lint_status=clean" >> $GITHUB_ENV
          else
            echo "- ❌ Lint errors detected. Attempting automatic correction..." >> $GITHUB_STEP_SUMMARY
      
            bun run fix-lint
      
            if bun run lint; then
                echo "- ✅ Automatic correction successful." >> $GITHUB_STEP_SUMMARY
              echo "lint_status=fixed" >> $GITHUB_ENV
            else
                echo "- ❌ Automatic correction failed. Errors remain." >> $GITHUB_STEP_SUMMARY
              echo "lint_status=failed" >> $GITHUB_ENV
            fi
          fi

      - name: Check for changes after lint
        id: check_changes
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
            echo "## 🔄 Checking for changes" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
      
          if git diff --name-only | grep -E '\.(js|ts|jsx|tsx|css|scss|json|md|yml|yaml)$'; then
            echo "- 📝 Changes have been detected in the following files:" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Fichier modifié |" >> $GITHUB_STEP_SUMMARY
            echo "|:---------------|" >> $GITHUB_STEP_SUMMARY
            git diff --name-only | grep -E '\.(js|ts|jsx|tsx|css|scss|json|md|yml|yaml)$' | while read file; do
              echo "| \`$file\` |" >> $GITHUB_STEP_SUMMARY
            done
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "- ✅ No files modified after lint." >> $GITHUB_STEP_SUMMARY
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push Lint Fixes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          # Import GPG key to sign commits
          echo "${{ env.KEY_GPG }}" | gpg --batch --import
          git config --local user.signingkey "$(gpg --list-keys --with-colons | grep '^pub' | cut -d':' -f5 | head -n1)"
          git config --local commit.gpgsign true
          git config --local tag.gpgsign true

          # Configure git user for commit
          git config --local user.email "$GIT_EMAIL"
          git config --local user.name "github-actions"

          # Add and commit only if there are real changes (safe check)
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "style(🎨): Auto-fix lint issues"

            # Push changes to the pull request branch
            git push origin HEAD:${{ github.head_ref }}
          else
            echo "No changes to commit."
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🚀 Automatic Publication" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Style fixes pushed to the pull request branch." >> $GITHUB_STEP_SUMMARY

  build:
    name: Check Build
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }} # head_ref is the branch name of the pull request
          fetch-depth: 0 # Fetch all history for all branches and tags
          ssh-key: ${{ env.KEY_SSH }} # SSH key to access the repository (used with deploy keys)

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with: 
          bun-version: latest

      - name: Install Dependencies
        run: bun install

      - name: Run Build and update Summary
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🏗️ Build Verification" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if bun run build; then
            echo "- ✅ Build succeeded." >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ Build failed. Please check the logs above for details." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

  unit-test:
    name: Check unit tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }} # head_ref is the branch name of the pull request
          fetch-depth: 0 # Fetch all history for all branches and tags
          ssh-key: ${{ env.KEY_SSH }} # SSH key to access the repository (used with deploy keys)

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install

      - name: Run Unit Tests and update Summary
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🧪 Unit Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Run tests and capture output
          if bun run test:unit; then
            echo "- ✅ All unit tests passed." >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ Some unit tests failed." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

  integration-test:
    name: Check integration tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }} # head_ref is the branch name of the pull request
          fetch-depth: 0 # Fetch all history for all branches and tags
          ssh-key: ${{ env.KEY_SSH }} # SSH key to access the repository (used with deploy keys)

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install

      - name: Run Integration Tests and update Summary
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🧪 Integration Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Run tests and capture output
          if bun run test:integration; then
            echo "- ✅ All integration tests passed." >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ Some integration tests failed." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi